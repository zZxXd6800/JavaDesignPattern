/**
 * 本质：提高软件的可维护性、通用性、拓展性，降低复杂度
 * 分类：（3类23种）
 *      a.创建型：单例、工厂、抽象工厂、原型、建造者
 *      b.结构型：装饰、代理、适配器、桥接、组合、外观、享元、
 *      c.行为型：观察者、访问者、迭代器、模板方法、命令、中介者、备忘录、解释器、状态、策略、责任链
 *
 */
public class DesignPattern {
}
