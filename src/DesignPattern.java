/**
 * 本质：提高软件的可维护性、通用性、拓展性，降低复杂度
 * 分类：（3类23种）
 *      a.创建型：单例、(简单工厂)、工厂方法、抽象工厂、原型、建造者
 *      b.结构型：适配器、桥接、装饰、组合、外观、享元、代理
 *      c.行为型：模板方法、命令、访问者、迭代器、观察者、中介者、备忘录、解释器、状态、策略、职责链
 */
public class DesignPattern {
}
